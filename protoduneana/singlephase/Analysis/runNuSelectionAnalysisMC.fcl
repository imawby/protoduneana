#include "NuSelectionAnalysis.fcl"
#include "services_dune.fcl"
#include "ProtoDUNETruthBeamFilter.fcl"
#include "calorimetry_pdune.fcl"
#include "mvamodule.fcl"

process_name: NuSelectionAna

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "NuSelectionAnalysisOutput.root" }
  TimeTracker:       {}
  MemoryTracker:     {}
  RandomNumberGenerator: {} #ART native random number generator
  message:                      @local::dune_message_services_prod_debug
  FileCatalogMetadata:          @local::art_file_catalog_mc
                                @table::protodune_services
  PdspChannelMapService:        @local::pdspchannelmap
  ChannelStatusService:         @local::pdsp_channel_status
  BackTrackerService: {
    BackTracker: {
      SimChannelModuleLabel: "tpcrawdecoder:simpleSC"
      G4ModuleLabel: "largeant"
      MinimumHitEnergyFraction: 1e-1
    }
  }
}

services.SpaceCharge.EnableSimEfieldSCE: true
services.SpaceCharge.EnableSimSpatialSCE: true
services.SpaceCharge.EnableSimulationSCE: true

source:
{
  module_type: RootInput
  maxEvents: -1
  fileNames: ["input_file.root"]
}

physics:
{

 producers:
 {

   warwickPID: {
        
     module_type:		"MVAPID"
     HitLabel:		    "hitpdune"
     TrackLabel:		"pandoraTrack"
     ShowerLabel:       "pandoraShower"
     SpacePointLabel:	"pandora"

     CalorimetryAlg:     @local::pdune_sp_calorimetryalgmc
     MVAMethods:		[ "electron","muon","photon","pich","proton" ]
     WeightFiles:		[ "mvapid_weights/electron_all_BDT.weights.xml",
                          "mvapid_weights/muon_all_BDT.weights.xml",
                          "mvapid_weights/photon_all_BDT.weights.xml",
                          "mvapid_weights/pich_all_BDT.weights.xml",
                          "mvapid_weights/proton_all_BDT.weights.xml" ]
   }
 }

 analyzers:
 {
  nuselectionana:          @local::nuselectionanalysis
 }
 
 prod: [ warwickPID ]

 trigger_paths: [ prod ] 

 stream1:  [ out1 ]

 ana:  [ nuselectionana ]
 
 #end_paths:     [ stream1, ana ]
  end_paths:     [ ana ]
}

outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName: "outfile_%#.root"
    dataTier:    "full-reconstructed"
    fileProperties: {
    maxInputFiles: 1
    granularity: "InputFile"
    }
  }
}


physics.analyzers.nuselectionana.BeamlineUtils.BeamEventTag: generator
